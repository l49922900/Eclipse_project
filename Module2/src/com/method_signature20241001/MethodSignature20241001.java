package com.method_signature20241001;

public class MethodSignature20241001 {
	/*
	 * 方法簽名(method signature。) :
	 * 是 Java 中用來唯一識別一個方法的標識。
	 * 它就像一個方法的「指紋」，通過這個指紋，編譯器可以準確地找到並調用正確的方法。

	方法簽名由以下部分組成：
		方法名稱: 方法的名字，用來呼叫這個方法。
		參數列表: 方法接受的參數的順序、類型和數量。注意，參數的名稱不包含在方法簽名中。
	
	
	方法簽名不包含:
		返回類型: 返回值類型雖然是方法的一部分，但並不包含在方法簽名中。
		修飾符: 如 public、private、static 等修飾符也不包含在方法簽名中。
	 */
	
	
	/*
	 * 為什麼方法簽名這麼重要:
			方法重載: Java允許一個類中有多個同名的方法，只要它們的參數列表不同。編譯器就是通過比較方法簽名來區分這些重載方法的。
			動態綁定: 虛方法調用時，編譯器會根據對象的實際類型來決定調用哪個方法，而這個決定的依據就是方法簽名。
			反射: Java 的反射機制允許在運行時獲取類的資訊，包括方法簽名。這在一些框架和工具中非常有用。
	 */
	
	
	

	//例子
	public int add(int a, int b) {
        return a + b;
    }

    public double add(double a, double b) {
        return a + b;
    }
    //dd(int a, int b) 和 add(double a, double b) 這兩個方法有相同的方法名稱，但參數列表不同，因此它們具有不同的方法簽名
}
