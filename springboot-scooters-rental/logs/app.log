2024-12-09T11:37:22.330+08:00  INFO 12428 --- [springmvc] [main] .e.d.SpringbootScootersRentalApplication : Starting SpringbootScootersRentalApplication using Java 21.0.4 with PID 12428 (C:\Users\pc\git\Eclipse_project\springboot-scooters-rental\target\classes started by pc in C:\Users\pc\git\Eclipse_project\springboot-scooters-rental)
2024-12-09T11:37:22.338+08:00  INFO 12428 --- [springmvc] [main] .e.d.SpringbootScootersRentalApplication : No active profile set, falling back to 1 default profile: "default"
2024-12-09T11:37:22.928+08:00  INFO 12428 --- [springmvc] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-09T11:37:22.929+08:00  INFO 12428 --- [springmvc] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2024-12-09T11:37:22.962+08:00  INFO 12428 --- [springmvc] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ScooterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-12-09T11:37:22.963+08:00  INFO 12428 --- [springmvc] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-12-09T11:37:22.963+08:00  INFO 12428 --- [springmvc] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
2024-12-09T11:37:22.972+08:00  INFO 12428 --- [springmvc] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-09T11:37:22.973+08:00  INFO 12428 --- [springmvc] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-09T11:37:23.006+08:00  INFO 12428 --- [springmvc] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28 ms. Found 2 JPA repository interfaces.
2024-12-09T11:37:23.407+08:00  INFO 12428 --- [springmvc] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8086 (http)
2024-12-09T11:37:23.418+08:00  INFO 12428 --- [springmvc] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-12-09T11:37:23.419+08:00  INFO 12428 --- [springmvc] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.33]
2024-12-09T11:37:23.557+08:00  INFO 12428 --- [springmvc] [main] org.apache.jasper.servlet.TldScanner     : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2024-12-09T11:37:23.560+08:00  INFO 12428 --- [springmvc] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-12-09T11:37:23.561+08:00  INFO 12428 --- [springmvc] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1188 ms
2024-12-09T11:37:23.576+08:00 ERROR 12428 --- [springmvc] [main] o.s.b.web.embedded.tomcat.TomcatStarter  : Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter': Unsatisfied dependency expressed through field 'userServiceImpl': Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'passwordEncoder': Error creating bean with name 'securityConfig' defined in file [C:\Users\pc\git\Eclipse_project\springboot-scooters-rental\target\classes\com\example\demo\config\SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'jwtAuthenticationFilter': Requested bean is currently in creation: Is there an unresolvable circular reference?
2024-12-09T11:37:23.603+08:00  INFO 12428 --- [springmvc] [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2024-12-09T11:37:23.614+08:00  WARN 12428 --- [springmvc] [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2024-12-09T11:37:23.619+08:00  INFO 12428 --- [springmvc] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-12-09T11:37:23.631+08:00 ERROR 12428 --- [springmvc] [main] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

┌─────┐
|  jwtAuthenticationFilter (field private com.example.demo.service.impl.UserServiceImpl com.example.demo.security.filter.JwtAuthenticationFilter.userServiceImpl)
↑     ↓
|  userServiceImpl (field private org.springframework.security.crypto.password.PasswordEncoder com.example.demo.service.impl.UserServiceImpl.passwordEncoder)
↑     ↓
|  securityConfig defined in file [C:\Users\pc\git\Eclipse_project\springboot-scooters-rental\target\classes\com\example\demo\config\SecurityConfig.class]
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

